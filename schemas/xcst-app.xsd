<?xml version="1.0" encoding="UTF-8"?>
<!-- Converted from Relax NG schema, using Trang. Use only with code completion tools that do not support Relax NG. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:a="http://maxtoroq.github.io/XCST/application" elementFormDefault="qualified" targetNamespace="http://maxtoroq.github.io/XCST/application">
   <xs:element name="extension-instruction" abstract="true"/>
   <xs:complexType name="sequence-constructor" mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
         <xs:element ref="a:extension-instruction"/>
         <xs:group ref="a:_other-element"/>
      </xs:choice>
   </xs:complexType>
   <xs:group name="_other-element">
      <xs:choice>
         <xs:any namespace="##other" processContents="lax"/>
         <xs:any namespace="##local" processContents="lax"/>
      </xs:choice>
   </xs:group>
   <xs:element name="input" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attributeGroup ref="a:_input-for-name-value-attribs"/>
         <xs:attribute name="type">
            <xs:simpleType>
               <xs:union memberTypes="a:input-type a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attribute name="format" type="a:avt"/>
         <xs:attributeGroup ref="a:_text-box-attribs"/>
         <xs:attributeGroup ref="a:_input-attribs"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="hidden" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attributeGroup ref="a:_input-for-name-value-attribs"/>
         <xs:attributeGroup ref="a:_input-attribs-except-autofocus"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="textarea" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attributeGroup ref="a:_input-for-name-value-attribs"/>
         <xs:attribute name="rows">
            <xs:simpleType>
               <xs:union memberTypes="a:integer a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attribute name="cols">
            <xs:simpleType>
               <xs:union memberTypes="a:integer a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attributeGroup ref="a:_text-box-attribs"/>
         <xs:attributeGroup ref="a:_input-attribs"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="checkbox" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
         <xs:attribute name="checked">
            <xs:simpleType>
               <xs:union memberTypes="a:boolean a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attributeGroup ref="a:_input-attribs"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="radio" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="value" use="required" type="a:expression"/>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
         <xs:attribute name="checked">
            <xs:simpleType>
               <xs:union memberTypes="a:boolean a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attributeGroup ref="a:_input-attribs"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="antiforgery" substitutionGroup="a:extension-instruction">
      <xs:complexType/>
   </xs:element>
   <xs:element name="select" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:_options">
               <xs:attributeGroup ref="a:_input-for-name-value-attribs"/>
               <xs:attribute name="multiple" type="a:boolean"/>
               <xs:attributeGroup ref="a:_input-attribs"/>
               <xs:attributeGroup ref="a:_html-attribs"/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="_options">
      <xs:sequence>
         <xs:element minOccurs="0" maxOccurs="unbounded" ref="a:option"/>
      </xs:sequence>
      <xs:attribute name="options" type="a:options-expr"/>
   </xs:complexType>
   <xs:element name="option">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:sequence-constructor">
               <xs:attribute name="value" type="a:expression"/>
               <xs:attribute name="selected">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
               <xs:attribute name="disabled">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="_input-for-name-value-attribs">
      <xs:attribute name="for" type="a:expression"/>
      <xs:attribute name="name" type="a:avt"/>
      <xs:attribute name="value" type="a:expression"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="_input-attribs">
      <xs:attributeGroup ref="a:_input-attribs-except-autofocus"/>
      <xs:attribute name="autofocus">
         <xs:simpleType>
            <xs:union memberTypes="a:boolean a:avt-expr"/>
         </xs:simpleType>
      </xs:attribute>
   </xs:attributeGroup>
   <xs:attributeGroup name="_input-attribs-except-autofocus">
      <xs:attribute name="disabled">
         <xs:simpleType>
            <xs:union memberTypes="a:boolean a:avt-expr"/>
         </xs:simpleType>
      </xs:attribute>
   </xs:attributeGroup>
   <xs:attributeGroup name="_text-box-attribs">
      <xs:attribute name="readonly">
         <xs:simpleType>
            <xs:union memberTypes="a:boolean a:avt-expr"/>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="placeholder" type="a:avt"/>
   </xs:attributeGroup>
   <xs:element name="label" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
         <xs:attribute name="text" type="a:avt"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="validation-summary" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="include-member-errors">
            <xs:simpleType>
               <xs:union memberTypes="a:boolean a:avt-expr"/>
            </xs:simpleType>
         </xs:attribute>
         <xs:attribute name="message" type="a:avt"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="validation-message" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
         <xs:attribute name="message" type="a:avt"/>
         <xs:attributeGroup ref="a:_html-attribs"/>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="_html-attribs">
      <xs:attribute name="class" type="a:avt"/>
      <xs:attribute name="attributes" type="a:expr-obj-dict"/>
   </xs:attributeGroup>
   <xs:element name="editor" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:_editor-display-common">
               <xs:attribute name="autofocus">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
               <xs:attribute name="disabled">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
               <xs:attribute name="readonly">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:element name="display" substitutionGroup="a:extension-instruction" type="a:_editor-display-common"/>
   <xs:complexType name="_editor-display-common">
      <xs:sequence>
         <xs:element minOccurs="0" maxOccurs="unbounded" ref="a:with-options"/>
         <xs:element minOccurs="0" ref="a:member-template"/>
      </xs:sequence>
      <xs:attribute name="for" type="a:expression"/>
      <xs:attribute name="name" type="a:avt"/>
      <xs:attribute name="members" type="a:members"/>
      <xs:attribute name="members-names">
         <xs:simpleType>
            <xs:union memberTypes="a:members a:avt-expr"/>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="template" type="a:avt"/>
      <xs:attribute name="field-name" type="a:avt"/>
      <xs:attribute name="attributes" type="a:expr-obj-dict"/>
      <xs:attribute name="with-params" type="a:expr-obj-dict"/>
      <xs:attribute name="options" type="a:options-expr"/>
   </xs:complexType>
   <xs:element name="with-options">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:_options">
               <xs:attribute name="for" type="a:expression"/>
               <xs:attribute name="name" type="a:avt"/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:element name="member-template">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:sequence-constructor">
               <xs:attribute name="helper-name" type="a:identifier"/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:element name="display-name" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
      </xs:complexType>
   </xs:element>
   <xs:element name="display-text" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:attribute name="for" type="a:expression"/>
         <xs:attribute name="name" type="a:avt"/>
      </xs:complexType>
   </xs:element>
   <xs:attributeGroup name="member-extensions">
      <xs:attribute name="file-extensions" form="qualified" type="a:file-extensions">
         <xs:annotation>
            <xs:documentation>A comma-separated list of valid file extensions for this member.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="file-max-length" form="qualified" type="a:integer">
         <xs:annotation>
            <xs:documentation>A maximum valid file length for this member.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="skip-binding" form="qualified" type="a:boolean">
         <xs:annotation>
            <xs:documentation>Specifies if this member should be excluded from model binding.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:attributeGroup>
   <xs:attributeGroup name="member-or-validation-extensions">
      <xs:attribute name="file-extensions-message" form="qualified" type="a:string">
         <xs:annotation>
            <xs:documentation>An error message for the a:file-extensions attribute.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute name="file-max-length-message" form="qualified" type="a:string">
         <xs:annotation>
            <xs:documentation>An error message for the a:file-max-length attribute.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:attributeGroup>
   <xs:element name="form" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:_form-model-common">
               <xs:attribute name="method" use="required" type="a:form-method"/>
               <xs:attribute name="model-value" type="a:expression"/>
               <xs:attribute name="model-type" type="a:type_name"/>
               <xs:attribute name="id" type="a:avt"/>
               <xs:attribute name="action" type="a:avt"/>
               <xs:attribute name="autocomplete" type="a:avt"/>
               <xs:attribute name="enctype" type="a:avt"/>
               <xs:attribute name="antiforgery">
                  <xs:simpleType>
                     <xs:union memberTypes="a:boolean a:avt-expr"/>
                  </xs:simpleType>
               </xs:attribute>
               <xs:attributeGroup ref="a:_html-attribs"/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:element name="model" substitutionGroup="a:extension-instruction">
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="a:_form-model-common">
               <xs:attribute name="value" type="a:expression"/>
               <xs:attribute name="as" type="a:type_name"/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="_form-model-common">
      <xs:complexContent>
         <xs:extension base="a:sequence-constructor">
            <xs:attribute name="field-prefix" type="a:avt"/>
            <xs:attribute name="helper-name" type="a:identifier"/>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:simpleType name="string">
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:simpleType name="integer">
      <xs:restriction base="xs:int"/>
   </xs:simpleType>
   <xs:simpleType name="boolean">
      <xs:annotation>
         <xs:documentation>One of the values "yes", "no", "true", "false", "1" or "0".</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:token">
         <xs:enumeration value="yes"/>
         <xs:enumeration value="no"/>
         <xs:enumeration value="true"/>
         <xs:enumeration value="false"/>
         <xs:enumeration value="1"/>
         <xs:enumeration value="0"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="input-type">
      <xs:restriction base="xs:token">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="form-method">
      <xs:restriction base="xs:token">
         <xs:enumeration value="post"/>
         <xs:enumeration value="get"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="file-extensions">
      <xs:restriction base="xs:token">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="avt">
      <xs:annotation>
         <xs:documentation>Attribute value template.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="a:string"/>
   </xs:simpleType>
   <xs:simpleType name="avt-expr">
      <xs:annotation>
         <xs:documentation>Attribute value template.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".*\{.+\}.*"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="expression">
      <xs:annotation>
         <xs:documentation>Expression.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="expr-obj-dict">
      <xs:restriction base="a:expression"/>
   </xs:simpleType>
   <xs:simpleType name="options-expr">
      <xs:restriction base="a:expression"/>
   </xs:simpleType>
   <xs:simpleType name="members">
      <xs:list itemType="a:identifier"/>
   </xs:simpleType>
   <xs:simpleType name="identifier">
      <xs:restriction base="xs:token">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="type_name">
      <xs:restriction base="xs:token">
         <xs:minLength value="1"/>
      </xs:restriction>
   </xs:simpleType>
</xs:schema>