<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2015 Max Toro Q.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
   xmlns:ann="http://relaxng.org/ns/compatibility/annotations/1.0"
   xmlns:docs="http://maxtoroq.github.io/XCST/docs"
   xmlns:a="http://maxtoroq.github.io/XCST/application"
   ns="http://maxtoroq.github.io/XCST/application"
   datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

   <div>
      <ann:documentation>Categories</ann:documentation>

      <define name="extension-instruction">
         <choice>
            <ref name="anti-forgery-token"/>
            <ref name="check-box"/>
            <ref name="display"/>
            <ref name="display-name"/>
            <ref name="display-text"/>
            <ref name="drop-down-list"/>
            <ref name="editor"/>
            <ref name="http-method-override"/>
            <ref name="input"/>
            <ref name="label"/>
            <ref name="list-box"/>
            <ref name="model"/>
            <ref name="radio-button"/>
            <ref name="text-area"/>
            <ref name="validation-summary"/>
            <ref name="validation-message"/>
         </choice>
      </define>

      <define name="sequence-constructor" docs:display-type="true">
         <zeroOrMore>
            <choice>
               <ref name="extension-instruction"/>
               <ref name="other-element"/>
               <text/>
            </choice>
         </zeroOrMore>
      </define>

      <define name="other-element">
         <element>
            <anyName>
               <except>
                  <nsName/>
               </except>
            </anyName>
            <zeroOrMore>
               <attribute>
                  <anyName>
                     <except>
                        <nsName/>
                     </except>
                  </anyName>
               </attribute>
            </zeroOrMore>
            <ref name="sequence-constructor"/>
         </element>
      </define>

      <define name="value-attribute-or-content">
         <choice>
            <attribute name="value">
               <ref name="expression"/>
            </attribute>
            <ref name="sequence-constructor"/>
         </choice>
      </define>
   </div>

   <div>
      <ann:documentation>Forms</ann:documentation>

      <define name="input">
         <element name="input">
            <ref name="input-attributes"/>
            <zeroOrMore>
               <choice>
                  <attribute name="type">
                     <choice>
                        <ref name="input-type"/>
                        <ref name="avt-expr"/>
                     </choice>
                  </attribute>
                  <attribute name="format">
                     <ref name="avt"/>
                  </attribute>
                  <attribute name="html-placeholder">
                     <ref name="avt"/>
                  </attribute>
               </choice>
            </zeroOrMore>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="text-area">
         <element name="text-area">
            <ref name="input-attributes"/>
            <zeroOrMore>
               <choice>
                  <attribute name="rows">
                     <choice>
                        <ref name="integer"/>
                        <ref name="avt-expr"/>
                     </choice>
                  </attribute>
                  <attribute name="cols">
                     <choice>
                        <ref name="integer"/>
                        <ref name="avt-expr"/>
                     </choice>
                  </attribute>
                  <attribute name="html-placeholder">
                     <ref name="avt"/>
                  </attribute>
               </choice>
            </zeroOrMore>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="check-box">
         <element name="check-box">
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <zeroOrMore>
                  <choice>
                     <attribute name="name">
                        <ref name="avt"/>
                     </attribute>
                     <attribute name="checked">
                        <choice>
                           <ref name="boolean"/>
                           <ref name="avt-expr"/>
                        </choice>
                     </attribute>
                  </choice>
               </zeroOrMore>
            </choice>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="radio-button">
         <element name="radio-button">
            <attribute name="value">
               <ref name="expression"/>
            </attribute>
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <zeroOrMore>
                  <choice>
                     <attribute name="name">
                        <ref name="avt"/>
                     </attribute>
                     <attribute name="checked">
                        <choice>
                           <ref name="boolean"/>
                           <ref name="avt-expr"/>
                        </choice>
                     </attribute>
                  </choice>
               </zeroOrMore>
            </choice>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="anti-forgery-token">
         <element name="anti-forgery-token">
            <empty/>
         </element>
      </define>

      <define name="http-method-override">
         <element name="http-method-override">
            <attribute name="method">
               <ref name="avt"/>
            </attribute>
         </element>
      </define>

      <define name="list-box">
         <element name="list-box">
            <ref name="select-common"/>
         </element>
      </define>

      <define name="drop-down-list">
         <element name="drop-down-list">
            <ref name="select-common"/>
         </element>
      </define>

      <define name="select-common">
         <ref name="input-attributes"/>
         <ref name="options"/>
         <ref name="html-attributes"/>
      </define>

      <define name="options">
         <optional>
            <attribute name="options">
               <ref name="options-expr"/>
            </attribute>
         </optional>
         <zeroOrMore>
            <element name="option">
               <zeroOrMore>
                  <choice>
                     <attribute name="value">
                        <ref name="expression"/>
                     </attribute>
                     <attribute name="selected">
                        <choice>
                           <ref name="boolean"/>
                           <ref name="avt-expr"/>
                        </choice>
                     </attribute>
                     <attribute name="disabled">
                        <choice>
                           <ref name="boolean"/>
                           <ref name="avt-expr"/>
                        </choice>
                     </attribute>
                  </choice>
               </zeroOrMore>
               <ref name="sequence-constructor"/>
            </element>
         </zeroOrMore>
      </define>

      <define name="options-expr">
         <ref name="expression">
            <docs:expression-type name="System.Collections.Generic.IEnumerable" topic="9eekhta0">
               <docs:type-param name="System.Web.Mvc.SelectListItem"/>
            </docs:expression-type>
            <docs:expression-type name="System.Collections.Generic.IEnumerable" topic="9eekhta0">
               <docs:type-param name="System.Collections.Generic.KeyValuePair&lt;TKey, TValue>" topic="5tbh8a42"/>
            </docs:expression-type>
            <docs:expression-type name="System.Collections.Generic.IEnumerable" topic="9eekhta0">
               <docs:type-param name="System.Linq.IGrouping" topic="bb344977">
                  <docs:type-param name="TGroupKey"/>
                  <docs:type-param name="System.Collections.Generic.KeyValuePair&lt;TKey, TValue>" topic="5tbh8a42"/>
               </docs:type-param>
            </docs:expression-type>
            <docs:expression-type name="System.Collections.Generic.IEnumerable" topic="9eekhta0">
               <docs:type-param name="System.Linq.IGrouping&lt;TKey, TElement>" topic="bb344977"/>
            </docs:expression-type>
            <docs:expression-type name="System.Collections.IEnumerable"/>
         </ref>
      </define>

      <define name="input-attributes">
         <choice>
            <attribute name="for">
               <ref name="expression"/>
            </attribute>
            <zeroOrMore>
               <choice>
                  <attribute name="name">
                     <ref name="avt"/>
                  </attribute>
                  <attribute name="value">
                     <ref name="expression"/>
                  </attribute>
               </choice>
            </zeroOrMore>
         </choice>
      </define>

      <define name="label">
         <element name="label">
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <optional>
                  <attribute name="name">
                     <ref name="avt"/>
                  </attribute>
               </optional>
            </choice>
            <optional>
               <attribute name="text">
                  <ref name="avt"/>
               </attribute>
            </optional>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="validation-summary">
         <element name="validation-summary">
            <zeroOrMore>
               <choice>
                  <attribute name="include-member-errors">
                     <choice>
                        <ref name="boolean"/>
                        <ref name="avt-expr"/>
                     </choice>
                  </attribute>
                  <attribute name="message">
                     <ref name="avt"/>
                  </attribute>
               </choice>
            </zeroOrMore>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="validation-message">
         <element name="validation-message">
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <optional>
                  <attribute name="name">
                     <ref name="avt"/>
                  </attribute>
               </optional>
            </choice>
            <optional>
               <attribute name="message">
                  <ref name="avt"/>
               </attribute>
            </optional>
            <ref name="html-attributes"/>
         </element>
      </define>

      <define name="html-attributes">
         <zeroOrMore>
            <choice>
               <attribute name="html-class">
                  <ref name="avt"/>
               </attribute>
               <attribute name="html-attributes">
                  <ref name="expression">
                     <docs:expression-type name="System.Object"/>
                     <docs:expression-type name="System.Collections.Generic.IDictionary" topic="s4ys34ea">
                        <docs:type-param name="System.String"/>
                        <docs:type-param name="System.Object"/>
                     </docs:expression-type>
                  </ref>
               </attribute>
            </choice>
         </zeroOrMore>
      </define>
   </div>

   <div>
      <ann:documentation>Templates</ann:documentation>

      <define name="editor">
         <element name="editor">
            <ref name="editor-display-common"/>
         </element>
      </define>

      <define name="display">
         <element name="display">
            <ref name="editor-display-common"/>
         </element>
      </define>

      <define name="editor-display-common">
         <choice>
            <attribute name="for">
               <ref name="expression"/>
            </attribute>
            <optional>
               <attribute name="name">
                  <ref name="avt"/>
               </attribute>
            </optional>
         </choice>
         <zeroOrMore>
            <choice>
               <attribute name="template">
                  <ref name="avt"/>
               </attribute>
               <attribute name="html-field-name">
                  <ref name="avt"/>
               </attribute>
               <attribute name="html-attributes">
                  <ref name="expression">
                     <docs:expression-type name="System.Object"/>
                     <docs:expression-type name="System.Collections.Generic.IDictionary" topic="s4ys34ea">
                        <docs:type-param name="System.String"/>
                        <docs:type-param name="System.Object"/>
                     </docs:expression-type>
                  </ref>
               </attribute>
               <attribute name="with-params">
                  <ref name="expression">
                     <docs:expression-type name="System.Object"/>
                     <docs:expression-type name="System.Collections.Generic.IDictionary" topic="s4ys34ea">
                        <docs:type-param name="System.String"/>
                        <docs:type-param name="System.Object"/>
                     </docs:expression-type>
                  </ref>
               </attribute>
               <attribute name="options">
                  <ref name="options-expr"/>
               </attribute>
            </choice>
         </zeroOrMore>
         <zeroOrMore>
            <element name="with-options">
               <choice>
                  <attribute name="for">
                     <ref name="expression"/>
                  </attribute>
                  <optional>
                     <attribute name="name">
                        <ref name="avt"/>
                     </attribute>
                  </optional>
               </choice>
               <ref name="options"/>
            </element>
         </zeroOrMore>
         <optional>
            <element name="member-template">
               <optional>
                  <attribute name="helper-name">
                     <ref name="identifier"/>
                  </attribute>
               </optional>
               <ref name="sequence-constructor"/>
            </element>
         </optional>
      </define>
   </div>

   <div>
      <ann:documentation>Metadata</ann:documentation>

      <define name="display-name">
         <element name="display-name">
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <optional>
                  <attribute name="name">
                     <ref name="avt"/>
                  </attribute>
               </optional>
            </choice>
         </element>
      </define>

      <define name="display-text">
         <element name="display-text">
            <choice>
               <attribute name="for">
                  <ref name="expression"/>
               </attribute>
               <optional>
                  <attribute name="name">
                     <ref name="avt"/>
                  </attribute>
               </optional>
            </choice>
         </element>
      </define>
   </div>

   <div>
      <ann:documentation>Models</ann:documentation>

      <define name="model">
         <element name="model">
            <oneOrMore>
               <choice>
                  <attribute name="value">
                     <ref name="expression"/>
                  </attribute>
                  <attribute name="as">
                     <ref name="type_name"/>
                  </attribute>
               </choice>
            </oneOrMore>
            <zeroOrMore>
               <choice>
                  <attribute name="html-field-prefix">
                     <ref name="avt"/>
                  </attribute>
                  <attribute name="with-params">
                     <ref name="expression">
                        <docs:expression-type name="System.Object"/>
                        <docs:expression-type name="System.Collections.Generic.IDictionary" topic="s4ys34ea">
                           <docs:type-param name="System.String"/>
                           <docs:type-param name="System.Object"/>
                        </docs:expression-type>
                     </ref>
                  </attribute>
                  <attribute name="helper-name">
                     <ref name="identifier"/>
                  </attribute>
               </choice>
            </zeroOrMore>
            <ref name="sequence-constructor"/>
         </element>
      </define>
   </div>

   <div>
      <ann:documentation>Data Types</ann:documentation>

      <define name="string">
         <data type="string"/>
      </define>

      <define name="integer">
         <data type="int"/>
      </define>

      <define name="boolean" docs:display-type="true">
         <ann:documentation>One of the values "yes", "no", "true", "false", "1" or "0".</ann:documentation>
         <choice>
            <value>yes</value>
            <value>no</value>
            <value>true</value>
            <value>false</value>
            <value>1</value>
            <value>0</value>
         </choice>
      </define>

      <define name="input-type">
         <data type="token">
            <param name="minLength">1</param>
         </data>
      </define>

      <define name="avt">
         <ann:documentation>Attribute value template.</ann:documentation>
         <ref name="string"/>
      </define>

      <define name="avt-expr">
         <ann:documentation>Attribute value template.</ann:documentation>
         <data type="string">
            <param name="pattern">.*\{.+\}.*</param>
         </data>
      </define>

      <define name="expression">
         <ann:documentation>Expression.</ann:documentation>
         <data type="string">
            <param name="minLength">1</param>
         </data>
      </define>

      <define name="identifier">
         <data type="token">
            <param name="minLength">1</param>
         </data>
      </define>

      <define name="type_name">
         <data type="token">
            <param name="minLength">1</param>
         </data>
      </define>
   </div>
</grammar>