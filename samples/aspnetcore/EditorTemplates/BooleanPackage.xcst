<?xml version="1.0" encoding="utf-8"?>
<?inherits Xcst.Web.Mvc.XcstViewPage?>
<c:package version='1.0' language='C#'
   xmlns:c='http://maxtoroq.github.io/XCST'
   xmlns:a='http://maxtoroq.github.io/XCST/application'
   extension-element-prefixes='a'>

   <c:import-namespace ns='System'/>
   <c:import-namespace ns='System.Collections.Generic'/>
   <c:import-namespace ns='System.Globalization'/>
   <c:import-namespace ns='System.Linq'/>

   <c:param name='htmlAttributes' as='IDictionary&lt;string, object>?'/>

   <c:variable name='@class' value='htmlAttributes?.TryGetValue("class", out var @class) == true ? $" {@class}" : null' as='string?'/>

   <c:template name='c:initial-template' visibility='public'>
      <c:variable name='modelValue' value='(ViewData.Model != null) ?
         Convert.ToBoolean(ViewData.Model, CultureInfo.InvariantCulture)
         : default(bool?)' as='bool?'/>
      <c:choose>
         <c:when test='ViewData.ModelMetadata.IsNullableValueType'>
            <a:select class='form-control{@class}'>
               <c:call-template name='write-attributes-except-class'/>
               <a:option value='""' selected='{!modelValue.HasValue}'/>
               <a:option value='"true"' selected='{modelValue.HasValue &amp;&amp; modelValue.Value}'>Yes</a:option>
               <a:option value='"false"' selected='{modelValue.HasValue &amp;&amp; !modelValue.Value}'>No</a:option>
            </a:select>
         </c:when>
         <c:otherwise>
            <div class='form-check'>
               <label class='form-check-label'>
                  <a:checkbox class='form-check-input{@class}' checked='{modelValue.GetValueOrDefault()}'>
                     <c:call-template name='write-attributes-except-class'/>
                  </a:checkbox>
               </label>
            </div>
         </c:otherwise>
      </c:choose>
   </c:template>

   <c:template name='write-attributes-except-class'>
      <c:if test='htmlAttributes != null'>
         <c:for-each name='pair' in='htmlAttributes.Where(p => p.Key != "class")'>
            <c:attribute name='{pair.Key}' value='pair.Value'/>
         </c:for-each>
      </c:if>
   </c:template>

</c:package>
