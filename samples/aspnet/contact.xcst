<?xml version="1.0" encoding="utf-8"?>
<c:module version='1.0' language='C#'
   xmlns:c='http://maxtoroq.github.io/XCST'
   xmlns:a='http://maxtoroq.github.io/XCST/application'
   extension-element-prefixes='a'>

   <c:import-namespace ns='System'/>
   <c:import-namespace ns='System.Net.Mail'/>
   <c:import-namespace ns='System.Web.Helpers'/>

   <c:import href='_common.xcst'/>

   <c:variable name='title'>Contact Us</c:variable>
   <c:variable name='contactTo'>sales@example.com</c:variable>
   <c:variable name='contactSubject'>Web Contact</c:variable>

   <c:type name='Contact'>
      <c:member name='Name' as='string' required='yes' min-length='2' max-length='50'/>
      <c:member name='Email' as='string' required='yes' max-length='255' data-type='EmailAddress' display-name='E-mail'/>
      <c:member name='Telephone' as='string' required='yes' min-length='8' max-length='20' data-type='PhoneNumber'/>
      <c:member name='Message' as='string' required='yes' max-length='2000' data-type='MultilineText'/>
   </c:type>

   <c:function name='SendMail' as='bool'>
      <c:param name='contact' as='Contact'/>

      <c:script>
         <![CDATA[

         var message = new MailMessage {
            From = new MailAddress("noreply@example.com", this.Request.Url.Host),
            To = { contactTo },
            Subject = contactSubject,
            ReplyToList = { new MailAddress(contact.Email, contact.Name) },
            Body = MailBody(contact),
            IsBodyHtml = true
         };

         try {
            using (var smtp = new SmtpClient()) {
               smtp.Send(message);
            }
            return true;

         } catch (SmtpException) {

            this.ModelState.AddModelError("", "An unexpected error ocurred.");
            return false;
         }
         ]]>
      </c:script>
   </c:function>

   <c:function name='MailBody' as='string'>
      <c:param name='contact' as='Contact'/>

      <c:return>
         <c:serialize method='html'>
            <a:model value='contact'>
               <dl>
                  <a:display>
                     <a:member-template>
                        <dt>
                           <a:display-name/>
                           <c:text>:</c:text>
                        </dt>
                        <dd>
                           <a:display/>
                        </dd>
                     </a:member-template>
                  </a:display>
               </dl>
            </a:model>
         </c:serialize>
      </c:return>
   </c:function>

   <c:template name='c:initial-template'>
      <c:script>
         <![CDATA[

         var contact = new Contact();
         bool sent = false;

         if (IsPost
            && AntiForgery.TryValidate()
            && TryBind(contact)
            && SendMail(contact)) {

            sent = true;

            // clear form
            this.ModelState.Clear();
            contact = new Contact();
         }
         ]]>
      </c:script>
      <c:next-template>
         <c:with-param name='contact' value='contact' tunnel='yes'/>
         <c:with-param name='sent' value='sent' tunnel='yes'/>
      </c:next-template>
   </c:template>

   <c:template name='content' expand-text='yes'>
      <c:param name='contact' as='Contact' required='yes' tunnel='yes'/>
      <c:param name='sent' as='bool' required='yes' tunnel='yes'/>

      <h1>{title}</h1>
      <a:model value='contact'>
         <c:if test='sent'>
            <div class='alert alert-success alert-dismissable'>
               <button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&#215;</button>
               <c:text>Thanks for contacting us. We'll get back to you shortly.</c:text>
            </div>
         </c:if>
         <form method='post'>
            <a:anti-forgery-token/>
            <a:validation-summary/>
            <a:editor with-params='new { labelColumnClass = "col-md-3", fieldColumnClass = "col-md-9" }'/>
            <div class='form-group row'>
               <div class='offset-md-3 col-md-9'>
                  <button type='submit' class='btn btn-primary'>Send</button>
               </div>
            </div>
         </form>
      </a:model>
   </c:template>

</c:module>
